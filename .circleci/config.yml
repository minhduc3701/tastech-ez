# Javascript Node CircleCI 2.0 configuration file
version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10.15.0-jessie-browsers-legacy
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn
      - run:
          name: Test
          command: yarn test
  build_dev:
    docker:
      - image: circleci/node:10.15.0-jessie-browsers-legacy
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: yarn build
          environment:
            GATSBY_API: https://api.dev.ezbiztrip.com
            GATSBY_CAPTCHA_V3_KEY: 6LffYc0UAAAAALaIIERuw4E3XELVCXbA-jGD2ZuR
            GATSBY_META_ROBOTS_CONTENT: noindex
            GATSBY_SITE_URL: http://dev.ezbiztrip.com
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - node_modules
            - src
            - public
  deploy_dev:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.14.37
            # Login to ecr and docker login
            aws_login=`aws ecr get-login --no-include-email --region us-east-2`
            eval $aws_login
            aws s3 sync public/ s3://dev.ezbiztrip.com
  build_test:
    docker:
      - image: circleci/node:10.15.0-jessie-browsers-legacy
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: yarn build
          environment:
            GATSBY_API: https://api.test.ezbiztrip.com
            GATSBY_CAPTCHA_V3_KEY: 6LffYc0UAAAAALaIIERuw4E3XELVCXbA-jGD2ZuR
            GATSBY_META_ROBOTS_CONTENT: noindex
            GATSBY_SITE_URL: http://test.ezbiztrip.com
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - node_modules
            - src
            - public
  deploy_test:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.14.37
            # Login to ecr and docker login
            aws_login=`aws ecr get-login --no-include-email --region us-east-2`
            eval $aws_login
            aws s3 sync public/ s3://test.ezbiztrip.com
  build_demo:
    docker:
      - image: circleci/node:10.15.0-jessie-browsers-legacy
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: yarn build
          environment:
            GATSBY_API: https://api.demo.ezbiztrip.com
            GATSBY_CAPTCHA_V3_KEY: 6LffYc0UAAAAALaIIERuw4E3XELVCXbA-jGD2ZuR
            GATSBY_DISABLE_CHECK_WORK_EMAIL: true
            GATSBY_META_ROBOTS_CONTENT: noindex
            GATSBY_SITE_URL: http://demo.ezbiztrip.com
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - node_modules
            - src
            - public
  deploy_demo:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.14.37
            # Login to ecr and docker login
            aws_login=`aws ecr get-login --no-include-email --region us-east-2`
            eval $aws_login
            aws s3 sync public/ s3://demo.ezbiztrip.com
  build_vn:
    docker:
      - image: circleci/node:10.15.0-jessie-browsers-legacy
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: yarn build
          environment:
            GATSBY_DEFAULT_LANGUAGE: vi
            GATSBY_SITE_URL: https://www.ezbiztrip.vn
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - node_modules
            - src
            - public
  deploy_vn:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.14.37
            # Login to ecr and docker login
            aws_login=`aws ecr get-login --no-include-email --region us-east-2`
            eval $aws_login
            aws s3 sync public/ s3://www.ezbiztrip.vn
  build:
    docker:
      - image: circleci/node:10.15.0-jessie-browsers-legacy
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: yarn
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run:
          name: Build the application
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - package.json
            - node_modules
            - src
            - public
  deploy:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ./
      - run:
          #Get all pre-requisites
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              awscli==1.14.37
            # Login to ecr and docker login
            aws_login=`aws ecr get-login --no-include-email --region us-east-2`
            eval $aws_login
            aws s3 sync public/ s3://www.ezbiztrip.com

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_dev:
          filters:
            branches:
              only:
                - develop
      - deploy_dev:
          requires:
            - build_dev
          filters:
            branches:
              only:
                - develop
      - build_test:
          filters:
            branches:
              only:
                - test
      - deploy_test:
          requires:
            - build_test
          filters:
            branches:
              only:
                - test
      - build_demo:
          filters:
            branches:
              only:
                - demo
      - deploy_demo:
          requires:
            - build_demo
          filters:
            branches:
              only:
                - demo
      - build:
          filters:
            branches:
              only:
                - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
  build_deploy_vn:
    jobs:
      - build_vn:
          filters:
            branches:
              only:
                - master
      - deploy_vn:
          requires:
            - build_vn
          filters:
            branches:
              only:
                - master
